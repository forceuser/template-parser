{"version":3,"sources":["/home/forceuser/Projects/_VAPROJECTS/template-parser/src/scope.js","/home/forceuser/Projects/_VAPROJECTS/template-parser/test/unit-tests/index.js"],"names":["isInvalid","value","model","scopeStack","get","chain","getter","callArgs","chainIdx","error","i","length","key","context","undefined","apply","set","setter","val","runTest","test","t","moo","a","b","p","scope","Scope","foo","bar","baz","equals","x","v","end"],"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","file":"0.test-runner-node.js","sourcesContent":["const isInvalid = (value) => value == null || (typeof value !== \"object\" && typeof value !== \"function\");\n\nexport default function (model) {\n\tconst scopeStack = [model];\n\tconst get = (chain, getter, callArgs) => {\n\t\tlet chainIdx = 0;\n\t\tlet value;\n\t\ttry {\n\t\t\tvalue = getter();\n\t\t\tchainIdx = 1;\n\t\t}\n\t\tcatch (error) {/* read variable from local scope if it is declared */}\n\n\t\tif (chainIdx === 0) {\n\t\t\tlet i = scopeStack.length - 1;\n\t\t\tconst key = chain[0];\n\t\t\twhile (i >= 0) {\n\t\t\t\tif (key in scopeStack[i]) {\n\t\t\t\t\tvalue = scopeStack[i][key];\n\t\t\t\t\tchainIdx = 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\ti--;\n\t\t\t}\n\t\t}\n\t\tlet context;\n\t\twhile (chainIdx < chain.length) {\n\t\t\tif (isInvalid(value)) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\tconst key = chain[chainIdx];\n\t\t\tcontext = value;\n\t\t\tvalue = value[key];\n\t\t\tchainIdx++;\n\t\t}\n\n\t\tif (chainIdx === chain.length && callArgs && typeof value === \"function\") {\n\t\t\treturn value.apply(context, callArgs);\n\t\t}\n\t\treturn value;\n\t};\n\n\tconst set = (chain, getter, setter, val) => {\n\t\tlet chainIdx = 0;\n\t\tlet value;\n\t\ttry {\n\t\t\tvalue = getter();\n\t\t\tif (chain.length > 1) {\n\t\t\t\tif (isInvalid(value)) {\n\t\t\t\t\tvalue = {};\n\t\t\t\t\tsetter(value);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\treturn setter(val);\n\t\t\t}\n\t\t\tchainIdx = 1;\n\t\t}\n\t\tcatch (error) {/* read variable from local scope if it is declared */}\n\t\tlet context = value;\n\t\tif (chainIdx === 0) {\n\t\t\tlet i = scopeStack.length - 1;\n\t\t\tconst key = chain[0];\n\t\t\twhile (i >= 0) {\n\t\t\t\tif (key in scopeStack[i] || i === 0) {\n\t\t\t\t\tcontext = scopeStack[i];\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\ti--;\n\t\t\t}\n\t\t}\n\n\t\twhile (chainIdx < chain.length) {\n\t\t\tconst key = chain[chainIdx];\n\t\t\tvalue = context[key];\n\t\t\tif (chainIdx === chain.length - 1) {\n\t\t\t\treturn context[key] = val;\n\t\t\t}\n\t\t\tif (isInvalid(value)) {\n\t\t\t\tvalue = {};\n\t\t\t\tcontext[key] = value;\n\t\t\t}\n\t\t\tcontext = value;\n\t\t\tchainIdx++;\n\t\t}\n\t\treturn \"AHHAHHAHHA\";\n\t};\n\n\treturn {scopeStack, get, set};\n}\n","import sinon from \"sinon\";\nimport Scope from \"src/scope.js\";\n\nexport default function runTest (test) {\n\ttest(\"Example test\", t => {\n\t\tconst moo = {a: {b: 5}};\n\t\tlet p;\n\n\t\tconst scope = new Scope({\n\t\t\tfoo: {\n\t\t\t\tbar: {\n\t\t\t\t\tbaz: () => 11,\n\t\t\t\t},\n\t\t\t},\n\t\t});\n\n\t\tt.equals(scope.get([\"moo\", \"a\", \"b\"], () => moo, []), 5);\n\t\tt.equals(scope.get([\"foo\", \"bar\", \"baz\"], () => foo, []), 11);\n\t\tt.equals(scope.set([\"a\", \"b\", \"c\"], () => a, val => a = val, 15), 15);\n\t\tt.equals(scope.get([\"a\", \"b\", \"c\"], () => a), 15);\n\t\tt.equals(scope.set([\"x\"], () => x, v => x = v, \"x-val\"), \"x-val\");\n\t\tt.equals(scope.set([\"p\", \"t\"], () => p, v => p = v, \"test\"), \"test\");\n\t\tt.equals(p.t, \"test\");\n\t\tt.end();\n\t});\n}\n"],"sourceRoot":""}