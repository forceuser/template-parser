{"version":3,"sources":["webpack://parse/webpack/universalModuleDefinition","webpack://parse/webpack/bootstrap","webpack://parse/./parse-ctrl.js","webpack://parse/./index.js","webpack://parse/./cjs-entry.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","getLineNumber","str","idx","lines","split","map","length","lc","ParseCtrl","text","_this","this","arguments","undefined","_classCallCheck","type","children","start","end","stack","copyStack","last","flags","RegExp","replace","params","ctrl","node","assign","lastIdx","data","substring","push","add","apply","lineStart","pop","lineEnd","shift","charAt","substr","moved","val","match","startsWith","parse","startTag","tagName","open","go","matchClose","close","startComment","endComment","endTag","selfClosing","startAttr","_match","full","prefix","attr","quote","matchExpr","startExp","startCopy","matcher","endExp","concat","isEnd","expression","endCopy","lastNode","content","fn","args","control","some","next","_parseCtrl","default"],"mappings":"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","file":"parse.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"parse\"] = factory();\n\telse\n\t\troot[\"parse\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","function getLineNumber (str, idx) {\n\tconst lines = str.split(\"\\n\").map(s => s.length);\n\tlet lc = 0;\n\tlet i = 0;\n\twhile (lc < idx && i < lines.length) {\n\t\tlc += lines[i];\n\t\ti++;\n\t}\n\treturn i - 1;\n}\n\nexport default class ParseCtrl {\n\tconstructor (text, idx = 0) {\n\t\tthis.text = text;\n\t\tthis.idx = idx;\n\t\tthis.root = {type: \"root\", children: [], start: idx, end: text.length};\n\t\tthis.stack = [this.root];\n\t\tthis.copyStack = [];\n\t\tObject.defineProperty(this.stack, \"empty\", {\n\t\t\tget () {\n\t\t\t\treturn this.length === 0;\n\t\t\t},\n\t\t});\n\t\tthis.stack.last = () => {\n\t\t\treturn this.stack[this.stack.length - 1];\n\t\t};\n\t}\n\tregexp (s, flags = \"\") {\n\t\treturn new RegExp(s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, \"\\\\$&\"), flags);\n\t}\n\tadd (type, params) {\n\t\tconst ctrl = this;\n\t\tconst node = Object.assign({children: [], start: this.lastIdx, end: this.idx, data: {}}, params, {type});\n\t\tObject.defineProperty(node, \"text\", {\n\t\t\tget () {\n\t\t\t\treturn ctrl.text.substring(node.start, node.end || ctrl.text.length);\n\t\t\t},\n\t\t});\n\t\tthis.node.children.push(node);\n\t\treturn node;\n\t}\n\tstart (...args) {\n\t\tconst node = this.add(...args);\n\t\tthis.stack.push(node);\n\t\tnode.start = this.idx;\n\t\tnode.lineStart = getLineNumber(this.text, node.start);\n\t\tnode.end = null;\n\t\treturn node;\n\t}\n\tend (params) {\n\t\tconst node = this.stack.pop();\n\t\tif (params) {\n\t\t\tObject.assign(node, params);\n\t\t}\n\t\tnode.end = this.idx;\n\t\tnode.lineEnd = getLineNumber(this.text, node.end);\n\t\treturn node;\n\t}\n\tget (length, shift = 0) {\n\t\tif (length === 1) {\n\t\t\treturn this.text.charAt(this.idx + shift);\n\t\t}\n\t\treturn this.text.substr(this.idx + shift, length);\n\t}\n\tstartCopy () {\n\t\tthis.copyStack.push(this.idx);\n\t}\n\tendCopy () {\n\t\tconst idx = this.copyStack.pop();\n\t\treturn this.text.substring(idx, this.idx);\n\t}\n\tget node () {\n\t\treturn this.stack[this.stack.length - 1];\n\t}\n\tgo (shift = 1) {\n\t\tthis.lastIdx = this.idx;\n\t\tthis.idx += shift;\n\t\tthis.moved = true;\n\t\treturn this;\n\t}\n\tnext () {\n\t\tthis.lastIdx = this.idx;\n\t\tif (!this.moved) {\n\t\t\tthis.idx++;\n\t\t}\n\t\telse {\n\t\t\tthis.moved = false;\n\t\t}\n\t\treturn this;\n\t}\n\tisEnd () {\n\t\treturn this.idx >= this.text.length;\n\t}\n\tmatch (val) {\n\t\tconst str = this.get();\n\t\tif (val instanceof RegExp) {\n\t\t\treturn str.match(val);\n\t\t}\n\t\treturn str.startsWith(val);\n\t}\n}\n","import ParseCtrl from \"./parse-ctrl.js\";\n\nconst startExp = \"{{\";\nconst endExp = \"}}\";\n\nexport default function parse (text) {\n\tconst ctrl = new ParseCtrl(text);\n\tconst parse = {\n\t\tstartTag () {\n\t\t\tif (ctrl.match(\"<\")) {\n\t\t\t\tconst match = ctrl.match(/^<([a-z](-?[a-z])*)/i);\n\t\t\t\tif (match) {\n\t\t\t\t\tconst tagName = match[1];\n\t\t\t\t\tctrl.start(\"tag\", { data: { tagName, open: true } });\n\t\t\t\t\tctrl.go(tagName.length + 1);\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tconst matchClose = ctrl.match(/^<\\/([a-z](-?[a-z])*)>/i);\n\t\t\t\t\tif (matchClose) {\n\t\t\t\t\t\tconst tagName = matchClose[1];\n\t\t\t\t\t\tctrl\n\t\t\t\t\t\t\t.go(matchClose[0].length)\n\t\t\t\t\t\t\t.add(\"tag\", { data: { tagName, close: true } });\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tstartComment () {\n\t\t\tif (ctrl.match(\"<!--\")) {\n\t\t\t\tctrl.start(\"comment\");\n\t\t\t\tctrl.go(4);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t},\n\t\tendComment () {\n\t\t\tif (ctrl.match(\"-->\")) {\n\t\t\t\tctrl.go(3).end();\n\t\t\t\treturn true;\n\t\t\t}\n\t\t},\n\t\tendTag () {\n\t\t\tif (ctrl.match(\"/>\")) {\n\t\t\t\tctrl.go(2).end({ data: { selfClosing: true } });\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\telse if (ctrl.match(\">\")) {\n\t\t\t\tctrl.go().end();\n\t\t\t\treturn true;\n\t\t\t}\n\t\t},\n\t\tstartAttr () {\n\t\t\tconst match = ctrl.match(/^(@[a-z]+)?:?([a-z-]+)?(?:=([\"']))?/i);\n\t\t\tif (match && match[0]) {\n\t\t\t\tconst [full, prefix, attr, quote] = match;\n\t\t\t\tif (quote) {\n\t\t\t\t\tctrl.start(\"attr\", { data: { attr, prefix, quote } });\n\t\t\t\t\tctrl.go(full.length);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tctrl\n\t\t\t\t\t\t.go(full.length)\n\t\t\t\t\t\t.add(\"attr\", { data: { attr, prefix } });\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t},\n\t\tattr () {\n\t\t\tconst matchExpr = ctrl.match(startExp);\n\t\t\tif (matchExpr) {\n\t\t\t\tctrl.go(startExp.length);\n\t\t\t\tctrl.startCopy();\n\t\t\t\tlet m;\n\t\t\t\tconst matcher = `${endExp}${ctrl.node.data.quote}`;\n\t\t\t\twhile (!m && !ctrl.isEnd()) {\n\t\t\t\t\tm = ctrl.match(matcher);\n\t\t\t\t\t!m && ctrl.go();\n\t\t\t\t}\n\t\t\t\tif (m) {\n\t\t\t\t\tconst expression = ctrl.endCopy();\n\t\t\t\t\tctrl.go(matcher.length).end({ data: { expression } });\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// parse string\n\t\t\t\tconst stringRegex = /^((\"(?:[^\"\\\\]|\\\\.)*\")|('(?:[^'\\\\]|\\\\.)*'))/;\n\t\t\t\tconst match = ctrl.go(-1).match(stringRegex);\n\t\t\t\tif (match) {\n\t\t\t\t\tctrl.node.value = match[0];\n\t\t\t\t\tctrl.go(match[0].length).end();\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\ttext () {\n\t\t\tconst lastNode = ctrl.root.children[ctrl.root.children.length - 1];\n\t\t\tif (lastNode && lastNode.type === \"text\") {\n\t\t\t\tlastNode.end = ctrl.idx;\n\t\t\t\tlastNode.data.content += ctrl.get(1);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tctrl.go(1).add(\"text\", { data: { content: ctrl.get(1) } });\n\t\t\t}\n\t\t},\n\t\texpression () {\n\t\t\tconst match = ctrl.match(\n\t\t\t\tnew RegExp(`^${startExp}(#|/)?(.*?)${endExp}`)\n\t\t\t);\n\t\t\tif (match) {\n\t\t\t\tconst { \"0\": full, \"1\": control, \"2\": expression } = match;\n\t\t\t\tlet fn;\n\t\t\t\tlet args;\n\t\t\t\tif (control === \"#\") {\n\t\t\t\t\tconst match = expression.match(\n\t\t\t\t\t\t/^([a-z]+(?:-[a-z]*)*)\\s?(.*)/i\n\t\t\t\t\t);\n\t\t\t\t\tfn = match[1];\n\t\t\t\t\targs = match[2];\n\t\t\t\t}\n\t\t\t\tctrl.go(full.length).add(\"expression\", {\n\t\t\t\t\tdata: { expression, control, fn, args },\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t};\n\n\twhile (!ctrl.isEnd()) {\n\t\tswitch (ctrl.node.type) {\n\t\t\tcase \"tag\": {\n\t\t\t\tif (ctrl.node.data.open) {\n\t\t\t\t\t[parse.endTag, parse.startAttr].some(p => p());\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tparse.endTag();\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase \"attr\": {\n\t\t\t\tparse.attr();\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase \"comment\": {\n\t\t\t\tparse.endComment();\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdefault: {\n\t\t\t\t[\n\t\t\t\t\tparse.startTag,\n\t\t\t\t\tparse.startComment,\n\t\t\t\t\tparse.expression,\n\t\t\t\t\tparse.text,\n\t\t\t\t].some(p => p());\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tctrl.next();\n\t}\n\treturn ctrl;\n}\n\n// разбить на выражения игнорируя строки\n// определить правую и левую сторону выражения (const, let, var)\n// const a = b = c + 2;\n// находим начало литерала [a-z]\n// идем игнорируя строки пока [a-z]\n// x.y = a.b[c[\"x\"]].d(attrs)\n\n// create empty expression, clear $ concat \"x\"\n// >. push \"x\"\n// clear $ concat \"y\"\n// >= push \"y\", mark expression as \"set\"\n// create empty expression, clear $ concat \"a\"\n// >. push \"a\"\n// clear $ concat b\n// >[ push \"b\",\n// >\"c\" create new expression\n\n// (get, set, call) => set([\"x\", \"y\"], call(get([\"a\", \"b\", get([\"c\", \"x\"]), \"d\"])), get([\"attrs\"]))\n// parse expression\n","module.exports = require(\"./index.js\").default;\n"],"sourceRoot":""}