{"version":3,"sources":["webpack://parse/webpack/universalModuleDefinition","webpack://parse/webpack/bootstrap","webpack://parse/./src/parse-ctrl.js","webpack://parse/./src/format-expression.js","webpack://parse/./src/parse-tpl.js","webpack://parse/./src/parse-expression.js","webpack://parse/./src/index.js","webpack://parse/./src/cjs-entry.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","getLineNumber","str","idx","lines","split","map","length","lc","constructor","text","this","type","children","start","end","stack","copyStack","last","regexp","flags","RegExp","replace","add","params","ctrl","node","assign","lastIdx","data","substring","push","args","lineStart","pop","lineEnd","shift","charAt","substr","startCopy","endCopy","go","moved","next","isEnd","match","val","startsWith","before","precedes","endsWith","format","result","lastSignificant","brk","open","getset","child","prevChild","significant","includes","brkn","noSemicolon","isOP","ignore","getNextSignificant","space","isLit","close","list","ParseCtrl","parse","startTag","tagName","matchClose","startComment","endComment","endTag","selfClosing","startAttr","full","prefix","attr","quote","matchExpr","startExp","matcher","endExp","expression","stringRegex","lastNode","content","0","1","control","2","fn","some","_parseCtrl","string","matchEscapes","matchQuote","comment","console","log","keyword","keywordsRegex","brackets","{","(","[","dot","comma","colon","semicolon","number","literal","operation","linebreak","join","_parseExpression","_interopRequireDefault","_parseTpl","_formatExpression","parseExpression","parseTpl","formatExpression","default"],"mappings":"CAAA,SAAAA,EAAAC,GACA,iBAAAC,SAAA,iBAAAC,OACAA,OAAAD,QAAAD,IACA,mBAAAG,eAAAC,IACAD,UAAAH,GACA,iBAAAC,QACAA,QAAA,MAAAD,IAEAD,EAAA,MAAAC,IARA,CASCK,OAAA,WACD,mBCTA,IAAAC,KAGA,SAAAC,EAAAC,GAGA,GAAAF,EAAAE,GACA,OAAAF,EAAAE,GAAAP,QAGA,IAAAC,EAAAI,EAAAE,IACAC,EAAAD,EACAE,GAAA,EACAT,YAUA,OANAU,EAAAH,GAAAI,KAAAV,EAAAD,QAAAC,IAAAD,QAAAM,GAGAL,EAAAQ,GAAA,EAGAR,EAAAD,QA2CA,OAtCAM,EAAAM,EAAAF,EAGAJ,EAAAO,EAAAR,EAGAC,EAAAQ,EAAA,SAAAd,EAAAe,EAAAC,GACAV,EAAAW,EAAAjB,EAAAe,IACAG,OAAAC,eAAAnB,EAAAe,GACAK,cAAA,EACAC,YAAA,EACAC,IAAAN,KAMAV,EAAAiB,EAAA,SAAAvB,GACAkB,OAAAC,eAAAnB,EAAA,cAAiDwB,OAAA,KAIjDlB,EAAAmB,EAAA,SAAAxB,GACA,IAAAe,EAAAf,KAAAyB,WACA,WAA2B,OAAAzB,EAAA,SAC3B,WAAiC,OAAAA,GAEjC,OADAK,EAAAQ,EAAAE,EAAA,IAAAA,GACAA,GAIAV,EAAAW,EAAA,SAAAU,EAAAC,GAAsD,OAAAV,OAAAW,UAAAC,eAAAnB,KAAAgB,EAAAC,IAGtDtB,EAAAyB,EAAA,GAIAzB,IAAA0B,EAAA,kCCnEA,SAASC,EAAeC,EAAKC,GAC5B,MAAMC,EAAQF,EAAIG,MAAM,MAAMC,IAAIN,GAAKA,EAAEO,QACzC,IAAIC,EAAK,EACLhC,EAAI,EACR,KAAOgC,EAAKL,GAAO3B,EAAI4B,EAAMG,QAC5BC,GAAMJ,EAAM5B,GACZA,IAED,OAAOA,EAAI,oFAIXiC,YAAaC,EAAMP,EAAM,GACxBQ,KAAKD,KAAOA,EACZC,KAAKR,IAAMA,EACXQ,KAAK7C,MAAQ8C,KAAM,OAAQC,YAAcC,MAAOX,EAAKY,IAAKL,EAAKH,QAC/DI,KAAKK,OAASL,KAAK7C,MACnB6C,KAAKM,aACL/B,OAAOC,eAAewB,KAAKK,MAAO,SACjC1B,MACC,OAAuB,IAAhBqB,KAAKJ,UAGdI,KAAKK,MAAME,KAAO,KACVP,KAAKK,MAAML,KAAKK,MAAMT,OAAS,IAGxCY,OAAQnB,EAAGoB,EAAQ,IAClB,OAAO,IAAIC,OAAOrB,EAAEsB,QAAQ,yBAA0B,QAASF,GAEhEG,IAAKX,EAAMY,GACV,MAAMC,EAAOd,KACPe,EAAOxC,OAAOyC,QAAQd,YAAcC,MAAOH,KAAKiB,QAASb,IAAKJ,KAAKR,IAAK0B,SAAWL,GAASZ,SAOlG,OANA1B,OAAOC,eAAeuC,EAAM,QAC3BpC,QACQmC,EAAKf,KAAKoB,UAAUJ,EAAKZ,MAAOY,EAAKX,KAAOU,EAAKf,KAAKH,UAG/DI,KAAKe,KAAKb,SAASkB,KAAKL,GACjBA,EAERZ,SAAUkB,GACT,MAAMN,EAAOf,KAAKY,OAAOS,GAKzB,OAJArB,KAAKK,MAAMe,KAAKL,GAChBA,EAAKZ,MAAQH,KAAKR,IAClBuB,EAAKO,UAAYhC,EAAcU,KAAKD,KAAMgB,EAAKZ,OAC/CY,EAAKX,IAAM,KACJW,EAERX,IAAKS,GACJ,MAAME,EAAOf,KAAKK,MAAMkB,MAMxB,OALIV,GACHtC,OAAOyC,OAAOD,EAAMF,GAErBE,EAAKX,IAAMJ,KAAKR,IAChBuB,EAAKS,QAAUlC,EAAcU,KAAKD,KAAMgB,EAAKX,KACtCW,EAERpC,IAAKiB,EAAQ6B,EAAQ,GACpB,OAAe,IAAX7B,EACII,KAAKD,KAAK2B,OAAO1B,KAAKR,IAAMiC,GAE7BzB,KAAKD,KAAK4B,OAAO3B,KAAKR,IAAMiC,EAAO7B,GAE3CgC,YACC5B,KAAKM,UAAUc,KAAKpB,KAAKR,KAE1BqC,UACC,MAAMrC,EAAMQ,KAAKM,UAAUiB,MAC3B,OAAOvB,KAAKD,KAAKoB,UAAU3B,EAAKQ,KAAKR,KAEtCuB,WACC,OAAOf,KAAKK,MAAML,KAAKK,MAAMT,OAAS,GAEvCkC,GAAIL,EAAQ,GAIX,OAHAzB,KAAKiB,QAAUjB,KAAKR,IACpBQ,KAAKR,KAAOiC,EACZzB,KAAK+B,OAAQ,EACN/B,KAERgC,OAQC,OAPAhC,KAAKiB,QAAUjB,KAAKR,IACfQ,KAAK+B,MAIT/B,KAAK+B,OAAQ,EAHb/B,KAAKR,MAKCQ,KAERiC,QACC,OAAOjC,KAAKR,KAAOQ,KAAKD,KAAKH,OAE9BsC,MAAOC,GACN,MAAM5C,EAAMS,KAAKrB,MACjB,OAAIwD,aAAezB,OACXnB,EAAI2C,MAAMC,GAEX5C,EAAI6C,WAAWD,GAEvBE,aACC,OAAOrC,KAAKD,KAAK4B,OAAO,EAAG3B,KAAKR,KAEjC8C,SAAUH,GACT,MAAM5C,EAAMS,KAAKqC,OACjB,OAAIF,aAAezB,OACXnB,EAAI2C,MAAMC,GAEX5C,EAAIgD,SAASJ,2GCtFtB,SAASK,EAAQzB,EAAMV,MACtB,MAAMH,EAAWa,EAAKb,aACtB,IAAIuC,EAAS,GACb,IAAIC,EACJ,IAAIC,GAAM,EAGS,aAAd5B,EAAKd,OACRwC,GAAU1B,EAAKG,KAAK0B,MAGtB,MAAMC,KACN,IAAK,IAAIhF,EAAI,EAAGA,EAAIqC,EAASN,OAAQ/B,IAAK,CACzC,MAAMiF,EAAQ5C,EAASrC,GACjBkF,EAAY7C,EAASrC,EAAI,GAEzBmF,GADY9C,EAASrC,EAAI,IACV,UAAW,YAAa,KAAKoF,SAASH,EAAM7C,MAC9D,KACA6C,GAwBH,IAAII,EACJ,IAvBmB,MAAfJ,EAAM7C,MAAgC,cAAf6C,EAAM7C,OAAyB0C,KACzDA,EAAMG,EAAM7C,OAIG,YAAf6C,EAAM7C,MACU,cAAf6C,EAAM7C,MAA2C,MAAnB6C,EAAM5B,KAAKiB,MAE1CU,EAAOzB,OAeJ4B,GAAeN,EAAiB,CACnC,MAAMS,EAAsB,cAARR,IAAwBS,EAAKV,IAAoBU,EAAKJ,IACtEL,IAAQQ,IACXV,GAAU,IACVS,GAAO,GAGT,MAAMG,GAAS,EAGJC,EAAmBzF,EAAGqC,GAWjC,GAAmB,aAAf4C,EAAM7C,KACTI,EAAMe,KAAKL,GACX0B,GAAUD,EAAOM,EAAOzC,GACxBA,EAAMkB,WAEF,IAAK8B,GACLP,EAAM5B,MAAQ4B,EAAM5B,KAAKiB,KAAOa,EAAa,CAChD,MAAMO,EACLR,GAAaS,EAAMT,IAAcS,EAAMV,GAAS,IAAM,GACvDL,GAAUc,EAAQT,EAAM5B,KAAKiB,IAI3Ba,IACHN,EAAkBM,EAClBL,GAAM,GAGU,aAAd5B,EAAKd,OACRwC,GAAU1B,EAAKG,KAAKuC,OAErB,OAAOhB,GArGR,SAASe,EAAOzC,GACf,OAAQ,UAAW,SAAU,UAAW,UAAUkC,SAASlC,EAAKd,MAGjE,SAASmD,EAAMrC,GACd,OAAQ,YAAa,IAAK,IAAK,KAAKkC,SAASlC,EAAKd,MAGnD,SAASqD,EAAoBzF,EAAG6F,GAC/B,KAAO7F,EAAI6F,EAAK9D,QACf,GAAqB,cAAjB8D,EAAK7F,GAAGoC,KACX,OAAOyD,EAAK7F,wGCZA,SAAgBkC,GAC9B,MAAMe,EAAO,IAAI6C,UAAU5D,GACrB6D,GACLC,WACC,GAAI/C,EAAKoB,MAAM,KAAM,CACpB,MAAMA,EAAQpB,EAAKoB,MAAM,wBACzB,GAAIA,EAAO,CACV,MAAM4B,EAAU5B,EAAM,GAGtB,OAFApB,EAAKX,MAAM,OAAQe,MAAO4C,UAASlB,MAAM,KACzC9B,EAAKgB,GAAGgC,EAAQlE,OAAS,IAClB,EAEH,CACJ,MAAMmE,EAAajD,EAAKoB,MAAM,2BAC9B,GAAI6B,EAAY,CACf,MAAMD,EAAUC,EAAW,GAI3B,OAHAjD,EACEgB,GAAGiC,EAAW,GAAGnE,QACjBgB,IAAI,OAAQM,MAAO4C,UAASL,OAAO,MAC9B,MAKXO,eACC,GAAIlD,EAAKoB,MAAM,WAGd,OAFApB,EAAKX,MAAM,WACXW,EAAKgB,GAAG,IACD,GAGTmC,aACC,GAAInD,EAAKoB,MAAM,UAEd,OADApB,EAAKgB,GAAG,GAAG1B,OACJ,GAGT8D,WACKpD,EAAKoB,MAAM,OACdpB,EAAKgB,GAAG,GAAG1B,KAAKc,MAAOiD,aAAa,MAC7B,GAECrD,EAAKoB,MAAM,MACnBpB,EAAKgB,KAAK1B,OACH,QAFH,EAKNgE,YACC,MAAMlC,EAAQpB,EAAKoB,MAAM,wCACzB,GAAIA,GAASA,EAAM,GAAI,CACtB,MAAOmC,EAAMC,EAAQC,EAAMC,GAAStC,EAUpC,OATIsC,GACH1D,EAAKX,MAAM,QAASe,MAAOqD,OAAMD,SAAQE,WACzC1D,EAAKgB,GAAGuC,EAAKzE,SAGbkB,EACEgB,GAAGuC,EAAKzE,QACRgB,IAAI,QAASM,MAAOqD,OAAMD,aAEtB,IAGTC,OACC,MAAME,EAAY3D,EAAKoB,MAAMwC,GAC7B,GAAID,EAAW,CAGd,IAAIxG,EAFJ6C,EAAKgB,GAAG4C,EAAS9E,QACjBkB,EAAKc,YAEL,MAAM+C,KAAaC,IAAS9D,EAAKC,KAAKG,KAAKsD,QAC3C,MAAQvG,IAAM6C,EAAKmB,WAClBhE,EAAI6C,EAAKoB,MAAMyC,KACT7D,EAAKgB,KAEZ,GAAI7D,EAAG,CACN,MAAM4G,EAAa/D,EAAKe,UACxBf,EAAKgB,GAAG6C,EAAQ/E,QAAQQ,KAAKc,MAAO2D,qBAGjC,CAEJ,MAAMC,EAAc,6CACd5C,EAAQpB,EAAKgB,IAAI,GAAGI,MAAM4C,GAC5B5C,IACHpB,EAAKC,KAAKlC,MAAQqD,EAAM,GACxBpB,EAAKgB,GAAGI,EAAM,GAAGtC,QAAQQ,SAI5BL,OACC,MAAMgF,EAAWjE,EAAK3D,KAAK+C,SAASY,EAAK3D,KAAK+C,SAASN,OAAS,GAC5DmF,GAA8B,SAAlBA,EAAS9E,MACxB8E,EAAS3E,IAAMU,EAAKtB,IACpBuF,EAAS7D,KAAK8D,SAAWlE,EAAKnC,IAAI,IAGlCmC,EAAKgB,GAAG,GAAGlB,IAAI,QAASM,MAAO8D,QAASlE,EAAKnC,IAAI,OAGnDkG,aACC,MAAM3C,EAAQpB,EAAKoB,MAClB,IAAIxB,WAAWgE,eAAsBE,MAEtC,GAAI1C,EAAO,CACV,MAAO+C,EAAKZ,EAAMa,EAAKC,EAASC,EAAKP,GAAc3C,EACnD,IAAImD,EACAhE,EACJ,GAAgB,MAAZ8D,EAAiB,CACpB,MAAMjD,EAAQ2C,EAAW3C,MACxB,iCAEDmD,EAAKnD,EAAM,GACXb,EAAOa,EAAM,GAEdpB,EAAKgB,GAAGuC,EAAKzE,QAAQgB,IAAI,cACxBM,MAAO2D,aAAYM,UAASE,KAAIhE,aAMpC,MAAQP,EAAKmB,SAAS,CACrB,OAAQnB,EAAKC,KAAKd,MACjB,IAAK,MACAa,EAAKC,KAAKG,KAAK0B,MACjBgB,EAAMM,OAAQN,EAAMQ,WAAWkB,KAAKlG,GAAKA,KAG1CwE,EAAMM,SAEP,MAED,IAAK,OACJN,EAAMW,OACN,MAED,IAAK,UACJX,EAAMK,aACN,MAED,SAEEL,EAAMC,SACND,EAAMI,aACNJ,EAAMiB,WACNjB,EAAM7D,MACLuF,KAAKlG,GAAKA,KAKd0B,EAAKkB,OAEN,OAAOlB,GA9JR,MAAAyE,KAAA5H,EAAA,gCAEA,MAAM+G,EAAW,KACXE,EAAS,8FCqDA,SAAgB7E,GAC9B,MAAMe,EAAO,IAAI6C,UAAU5D,GACrB6D,GACL4B,SACC,GAAuB,WAAnB1E,EAAKC,KAAKd,KAAmB,CAChC,MAAMc,EAAOD,EAAKC,KAClB,GAAID,EAAKoB,MAAMpB,EAAKC,KAAKG,KAAKsD,OAAQ,CACrC,MAAMiB,EAAe3E,EAAKwB,SAAS,UACnC,IACEmD,GACAA,GAAgBA,EAAa,GAAG7F,OAAS,GAAM,EAIhD,OAFAkB,EAAKgB,KAAK1B,MACVW,EAAKG,KAAKiB,IAAMpB,EAAKhB,MACd,OAIL,CACJ,MAAM2F,EAAa5E,EAAKoB,MAAM,YAC9B,GAAIwD,EAEH,OADA5E,EAAKX,MAAM,UAAWe,MAAOsD,MAAOkB,EAAW,OACxC,IAIVC,UACC,MAAMzD,EAAQpB,EAAKoB,MAAM,wBAA0BpB,EAAKoB,MAAM,uBAC9D,GAAIA,EAGH,OAFA0D,QAAQC,IAAI,UAAW3D,EAAM,IAC7BpB,EAAKgB,GAAGI,EAAM,GAAGtC,QAAQgB,IAAI,YACtB,GAGTkF,UACC,MAAM5D,EAAQpB,EAAKoB,MAAM6D,GACrB7D,GACHpB,EACEgB,GAAGI,EAAM,GAAGtC,QACZgB,IAAI,WAAYM,MAAOiB,IAAKD,EAAM,OAGtC8D,WACC,GAAuB,aAAnBlF,EAAKC,KAAKd,MAAuBa,EAAKoB,MAAMpB,EAAKC,KAAKG,KAAKuC,OAE9D,OADA3C,EAAKgB,KAAK1B,OACH,EAER,MAAM8B,EAAQpB,EAAKoB,MAAM,eACzB,OAAIA,GACHpB,EAAKX,MAAM,YAAae,MAAO0B,KAAMV,EAAM,GAAIuB,OAAQwC,IAAK,IAAKC,IAAK,IAAKC,IAAK,KAAKjE,EAAM,QACpF,QAFR,GAKDkE,MACC,MAAMlE,EAAQpB,EAAKoB,MAAM,UACzB,GAAIA,GAA6B,IAApBA,EAAM,GAAGtC,OAErB,OADAkB,EAAKgB,KAAKlB,IAAI,KAAMM,MAAOiB,IAAK,QACzB,GAGTkE,QACC,GAAIvF,EAAKoB,MAAM,KAEd,OADApB,EAAKgB,KAAKlB,IAAI,KAAMM,MAAOiB,IAAK,QACzB,GAGTmE,QACC,GAAIxF,EAAKoB,MAAM,KAEd,OADApB,EAAKgB,KAAKlB,IAAI,KAAMM,MAAOiB,IAAK,QACzB,GAGToE,YACC,GAAIzF,EAAKoB,MAAM,KAEd,OADApB,EAAKgB,KAAKlB,IAAI,MACP,GAGT4F,SACC,MAAMtE,EAAQpB,EAAKoB,MAAM,iBACzB,GAAIA,EAEH,OADApB,EAAKgB,GAAGI,EAAM,GAAGtC,QAAQgB,IAAI,UAAWM,MAAOiB,IAAKD,EAAM,OACnD,GAGTuE,UAEC,MAAMvE,EAAQpB,EAAKoB,MAAM,sBACzB,GAAIA,EAIH,OAHApB,EACEgB,GAAGI,EAAM,GAAGtC,QACZgB,IAAI,WAAYM,MAAOiB,IAAKD,EAAM,OAC7B,GAGTwE,YACC,MAAMxE,EAAQpB,EAAKoB,MAAM,uBACzB,GAAIA,EAIH,OAHApB,EACEgB,GAAGI,EAAM,GAAGtC,QACZgB,IAAI,aAAcM,MAAOiB,IAAKD,EAAM,OAC/B,GAGTyE,YACC,GAAI7F,EAAKoB,MAAM,OAEd,OADApB,EAAKgB,KAAKlB,IAAI,cACP,IAKV,MAAQE,EAAKmB,SAAS,CACrB,OAAQnB,EAAKC,KAAKd,MACjB,IAAK,SACJ2D,EAAM4B,SACN,MAED,IAAK,UACJ,MAED,SAEE5B,EAAM+B,QACN/B,EAAM4B,OACN5B,EAAM+C,UACN/C,EAAM2C,UACN3C,EAAM4C,OACN5C,EAAMkC,QACNlC,EAAMoC,SACNpC,EAAM0C,MACN1C,EAAMyC,MACNzC,EAAMwC,IACNxC,EAAM6C,QACN7C,EAAM8C,WACLpB,KAAKlG,GAAKA,KAId0B,EAAKkB,OAEN,OAAOlB,GArMR,MAAAyE,KAAA5H,EAAA,gCAEA,MAoDMoI,EAAgB,IAAIrF,aAnDzB,QACA,QACA,QACA,OACA,QACA,QACA,QACA,WACA,WACA,UACA,SACA,KACA,OACA,OACA,SACA,UACA,UACA,MACA,WACA,OACA,KACA,SACA,KACA,aACA,MACA,MACA,SACA,QACA,SACA,OACA,QACA,MACA,SACA,MACA,OACA,QACA,OACA,QACA,aACA,UACA,YACA,SACA,YACA,UACA,SACA,OACA,OACA,QACA,aAG8CkG,KAAK,4GCtDpD,IAAAC,EAAAC,EAAAnJ,EAAA,IACAoJ,EAAAD,EAAAnJ,EAAA,IACAqJ,EAAAF,EAAAnJ,EAAA,8DAGCsJ,0BACAC,mBACAC,sECPD7J,EAAOD,QAAUM,EAAQ,GAAcyJ","file":"parse.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"parse\"] = factory();\n\telse\n\t\troot[\"parse\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 5);\n","function getLineNumber (str, idx) {\n\tconst lines = str.split(\"\\n\").map(s => s.length);\n\tlet lc = 0;\n\tlet i = 0;\n\twhile (lc < idx && i < lines.length) {\n\t\tlc += lines[i];\n\t\ti++;\n\t}\n\treturn i - 1;\n}\n\nexport default class ParseCtrl {\n\tconstructor (text, idx = 0) {\n\t\tthis.text = text;\n\t\tthis.idx = idx;\n\t\tthis.root = {type: \"root\", children: [], start: idx, end: text.length};\n\t\tthis.stack = [this.root];\n\t\tthis.copyStack = [];\n\t\tObject.defineProperty(this.stack, \"empty\", {\n\t\t\tget () {\n\t\t\t\treturn this.length === 0;\n\t\t\t},\n\t\t});\n\t\tthis.stack.last = () => {\n\t\t\treturn this.stack[this.stack.length - 1];\n\t\t};\n\t}\n\tregexp (s, flags = \"\") {\n\t\treturn new RegExp(s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, \"\\\\$&\"), flags);\n\t}\n\tadd (type, params) {\n\t\tconst ctrl = this;\n\t\tconst node = Object.assign({children: [], start: this.lastIdx, end: this.idx, data: {}}, params, {type});\n\t\tObject.defineProperty(node, \"text\", {\n\t\t\tget () {\n\t\t\t\treturn ctrl.text.substring(node.start, node.end || ctrl.text.length);\n\t\t\t},\n\t\t});\n\t\tthis.node.children.push(node);\n\t\treturn node;\n\t}\n\tstart (...args) {\n\t\tconst node = this.add(...args);\n\t\tthis.stack.push(node);\n\t\tnode.start = this.idx;\n\t\tnode.lineStart = getLineNumber(this.text, node.start);\n\t\tnode.end = null;\n\t\treturn node;\n\t}\n\tend (params) {\n\t\tconst node = this.stack.pop();\n\t\tif (params) {\n\t\t\tObject.assign(node, params);\n\t\t}\n\t\tnode.end = this.idx;\n\t\tnode.lineEnd = getLineNumber(this.text, node.end);\n\t\treturn node;\n\t}\n\tget (length, shift = 0) {\n\t\tif (length === 1) {\n\t\t\treturn this.text.charAt(this.idx + shift);\n\t\t}\n\t\treturn this.text.substr(this.idx + shift, length);\n\t}\n\tstartCopy () {\n\t\tthis.copyStack.push(this.idx);\n\t}\n\tendCopy () {\n\t\tconst idx = this.copyStack.pop();\n\t\treturn this.text.substring(idx, this.idx);\n\t}\n\tget node () {\n\t\treturn this.stack[this.stack.length - 1];\n\t}\n\tgo (shift = 1) {\n\t\tthis.lastIdx = this.idx;\n\t\tthis.idx += shift;\n\t\tthis.moved = true;\n\t\treturn this;\n\t}\n\tnext () {\n\t\tthis.lastIdx = this.idx;\n\t\tif (!this.moved) {\n\t\t\tthis.idx++;\n\t\t}\n\t\telse {\n\t\t\tthis.moved = false;\n\t\t}\n\t\treturn this;\n\t}\n\tisEnd () {\n\t\treturn this.idx >= this.text.length;\n\t}\n\tmatch (val) {\n\t\tconst str = this.get();\n\t\tif (val instanceof RegExp) {\n\t\t\treturn str.match(val);\n\t\t}\n\t\treturn str.startsWith(val);\n\t}\n\tget before () {\n\t\treturn this.text.substr(0, this.idx);\n\t}\n\tprecedes (val) {\n\t\tconst str = this.before;\n\t\tif (val instanceof RegExp) {\n\t\t\treturn str.match(val);\n\t\t}\n\t\treturn str.endsWith(val);\n\t}\n}\n","export default format;\n\nfunction isVal (node) {\n\treturn [\"number\", \"literal\", \"string\"].includes(node.type);\n}\n\nfunction isLit (node) {\n\treturn [\"keyword\", \"number\", \"literal\", \"string\"].includes(node.type);\n}\n\nfunction isOP (node) {\n\treturn [\"operation\", \",\", \".\", \":\"].includes(node.type);\n}\n\nfunction getNextSignificant (i, list) {\n\twhile (i < list.length) {\n\t\tif (list[i].type !== \"linebreak\") {\n\t\t\treturn list[i];\n\t\t}\n\t}\n}\n\nfunction format (node, stack = []) {\n\tconst children = node.children || [];\n\tlet result = \"\";\n\tlet lastSignificant;\n\tlet brk = false;\n\n\t{\n\t\tif (node.type === \"brackets\") {\n\t\t\tresult += node.data.open;\n\t\t}\n\t}\n\tconst getset = [];\n\tfor (let i = 0; i < children.length; i++) {\n\t\tconst child = children[i];\n\t\tconst prevChild = children[i - 1];\n\t\tconst nextChild = children[i + 1];\n\t\tconst significant = [\"comment\", \"linebreak\", \";\"].includes(child.type)\n\t\t\t? null\n\t\t\t: child;\n\n\t\tif (child.type === \";\" || (child.type === \"linebreak\" && !brk)) {\n\t\t\tbrk = child.type;\n\t\t}\n\n\t\tif (\n\t\t\tchild.type === \"literal\" ||\n\t\t\t(child.type === \"operation\" && child.data.val === \".\")\n\t\t) {\n\t\t\tgetset.push();\n\t\t}\n\n\t\t// нужна переменная для определения начала строк\n\t\t// нужно определять если () идут после литерала или блока (исключить обьявление функции)\n\t\t// нужно определить если [] идут после литерала или блока\n\t\t// getLoc([\"x\"], ({x: 1}))\n\t\t// setLoc([\"x\"], ({x: 1}), 2)\n\t\t// setLoc()\n\t\t// (a.b.c)[\"d\"](7) = 3\n\t\t// (x, s.a.w).p = 2;\n\t\t// (a).b.c = 12;\n\t\t// setLoc([\"b\", \"c\"], get([\"a\"]))\n\n\t\tlet brkn;\n\t\tif (significant && lastSignificant) {\n\t\t\tconst noSemicolon = brk === \"linebreak\" && (isOP(lastSignificant) || isOP(significant));\n\t\t\tif (brk && !noSemicolon) {\n\t\t\t\tresult += \";\";\n\t\t\t\tbrkn = true;\n\t\t\t}\n\t\t}\n\t\tconst ignore = false;\n\n\n\t\tconst nx = getNextSignificant(i, children);\n\n\t\t// if (isVal(child)) {\n\t\t// \tif (nx && (nx.type === \".\" || (nx.type === \"brackets\" && nx.data.open === \"[\"))) {\n\n\t\t// \t}\n\t\t// \telse {\n\n\t\t// \t}\n\t\t// }\n\n\t\tif (child.type === \"brackets\") {\n\t\t\tstack.push(node);\n\t\t\tresult += format(child, stack);\n\t\t\tstack.pop();\n\t\t}\n\t\telse if (!ignore) {\n\t\t\tif (child.data && child.data.val && significant) {\n\t\t\t\tconst space =\n\t\t\t\t\tprevChild && isLit(prevChild) && isLit(child) ? \" \" : \"\";\n\t\t\t\tresult += space + child.data.val;\n\t\t\t}\n\t\t}\n\n\t\tif (significant) {\n\t\t\tlastSignificant = significant;\n\t\t\tbrk = false;\n\t\t}\n\t}\n\tif (node.type === \"brackets\") {\n\t\tresult += node.data.close;\n\t}\n\treturn result;\n}\n","import ParseCtrl from \"./parse-ctrl.js\";\n\nconst startExp = \"{{\";\nconst endExp = \"}}\";\n\nexport default function parse (text) {\n\tconst ctrl = new ParseCtrl(text);\n\tconst parse = {\n\t\tstartTag () {\n\t\t\tif (ctrl.match(\"<\")) {\n\t\t\t\tconst match = ctrl.match(/^<([a-z](-?[a-z])*)/i);\n\t\t\t\tif (match) {\n\t\t\t\t\tconst tagName = match[1];\n\t\t\t\t\tctrl.start(\"tag\", {data: {tagName, open: true}});\n\t\t\t\t\tctrl.go(tagName.length + 1);\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tconst matchClose = ctrl.match(/^<\\/([a-z](-?[a-z])*)>/i);\n\t\t\t\t\tif (matchClose) {\n\t\t\t\t\t\tconst tagName = matchClose[1];\n\t\t\t\t\t\tctrl\n\t\t\t\t\t\t\t.go(matchClose[0].length)\n\t\t\t\t\t\t\t.add(\"tag\", {data: {tagName, close: true}});\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tstartComment () {\n\t\t\tif (ctrl.match(\"<!--\")) {\n\t\t\t\tctrl.start(\"comment\");\n\t\t\t\tctrl.go(4);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t},\n\t\tendComment () {\n\t\t\tif (ctrl.match(\"-->\")) {\n\t\t\t\tctrl.go(3).end();\n\t\t\t\treturn true;\n\t\t\t}\n\t\t},\n\t\tendTag () {\n\t\t\tif (ctrl.match(\"/>\")) {\n\t\t\t\tctrl.go(2).end({data: {selfClosing: true}});\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\telse if (ctrl.match(\">\")) {\n\t\t\t\tctrl.go().end();\n\t\t\t\treturn true;\n\t\t\t}\n\t\t},\n\t\tstartAttr () {\n\t\t\tconst match = ctrl.match(/^(@[a-z]+)?:?([a-z-]+)?(?:=([\"']))?/i);\n\t\t\tif (match && match[0]) {\n\t\t\t\tconst [full, prefix, attr, quote] = match;\n\t\t\t\tif (quote) {\n\t\t\t\t\tctrl.start(\"attr\", {data: {attr, prefix, quote}});\n\t\t\t\t\tctrl.go(full.length);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tctrl\n\t\t\t\t\t\t.go(full.length)\n\t\t\t\t\t\t.add(\"attr\", {data: {attr, prefix}});\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t},\n\t\tattr () {\n\t\t\tconst matchExpr = ctrl.match(startExp);\n\t\t\tif (matchExpr) {\n\t\t\t\tctrl.go(startExp.length);\n\t\t\t\tctrl.startCopy();\n\t\t\t\tlet m;\n\t\t\t\tconst matcher = `${endExp}${ctrl.node.data.quote}`;\n\t\t\t\twhile (!m && !ctrl.isEnd()) {\n\t\t\t\t\tm = ctrl.match(matcher);\n\t\t\t\t\t!m && ctrl.go();\n\t\t\t\t}\n\t\t\t\tif (m) {\n\t\t\t\t\tconst expression = ctrl.endCopy();\n\t\t\t\t\tctrl.go(matcher.length).end({data: {expression}});\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// parse string\n\t\t\t\tconst stringRegex = /^((\"(?:[^\"\\\\]|\\\\.)*\")|('(?:[^'\\\\]|\\\\.)*'))/;\n\t\t\t\tconst match = ctrl.go(-1).match(stringRegex);\n\t\t\t\tif (match) {\n\t\t\t\t\tctrl.node.value = match[0];\n\t\t\t\t\tctrl.go(match[0].length).end();\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\ttext () {\n\t\t\tconst lastNode = ctrl.root.children[ctrl.root.children.length - 1];\n\t\t\tif (lastNode && lastNode.type === \"text\") {\n\t\t\t\tlastNode.end = ctrl.idx;\n\t\t\t\tlastNode.data.content += ctrl.get(1);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tctrl.go(1).add(\"text\", {data: {content: ctrl.get(1)}});\n\t\t\t}\n\t\t},\n\t\texpression () {\n\t\t\tconst match = ctrl.match(\n\t\t\t\tnew RegExp(`^${startExp}(#|/)?(.*?)${endExp}`)\n\t\t\t);\n\t\t\tif (match) {\n\t\t\t\tconst {\"0\": full, \"1\": control, \"2\": expression} = match;\n\t\t\t\tlet fn;\n\t\t\t\tlet args;\n\t\t\t\tif (control === \"#\") {\n\t\t\t\t\tconst match = expression.match(\n\t\t\t\t\t\t/^([a-z]+(?:-[a-z]*)*)\\s?(.*)/i\n\t\t\t\t\t);\n\t\t\t\t\tfn = match[1];\n\t\t\t\t\targs = match[2];\n\t\t\t\t}\n\t\t\t\tctrl.go(full.length).add(\"expression\", {\n\t\t\t\t\tdata: {expression, control, fn, args},\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t};\n\n\twhile (!ctrl.isEnd()) {\n\t\tswitch (ctrl.node.type) {\n\t\t\tcase \"tag\": {\n\t\t\t\tif (ctrl.node.data.open) {\n\t\t\t\t\t[parse.endTag, parse.startAttr].some(p => p());\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tparse.endTag();\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase \"attr\": {\n\t\t\t\tparse.attr();\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase \"comment\": {\n\t\t\t\tparse.endComment();\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdefault: {\n\t\t\t\t[\n\t\t\t\t\tparse.startTag,\n\t\t\t\t\tparse.startComment,\n\t\t\t\t\tparse.expression,\n\t\t\t\t\tparse.text,\n\t\t\t\t].some(p => p());\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tctrl.next();\n\t}\n\treturn ctrl;\n}\n","import ParseCtrl from \"./parse-ctrl.js\";\n\nconst keywords = [\n\t\"async\",\n\t\"await\",\n\t\"break\",\n\t\"case\",\n\t\"class\",\n\t\"catch\",\n\t\"const\",\n\t\"continue\",\n\t\"debugger\",\n\t\"default\",\n\t\"delete\",\n\t\"do\",\n\t\"else\",\n\t\"enum\",\n\t\"export\",\n\t\"extends\",\n\t\"finally\",\n\t\"for\",\n\t\"function\",\n\t\"goto\",\n\t\"if\",\n\t\"import\",\n\t\"in\",\n\t\"instanceof\",\n\t\"let\",\n\t\"new\",\n\t\"return\",\n\t\"super\",\n\t\"switch\",\n\t\"this\",\n\t\"throw\",\n\t\"try\",\n\t\"typeof\",\n\t\"var\",\n\t\"void\",\n\t\"while\",\n\t\"with\",\n\t\"yield\",\n\t\"implements\",\n\t\"package\",\n\t\"protected\",\n\t\"static\",\n\t\"interface\",\n\t\"private\",\n\t\"public\",\n\t\"null\",\n\t\"true\",\n\t\"false\",\n\t\"undefined\",\n];\n\nconst keywordsRegex = new RegExp(`^(${keywords.join(\"|\")})\\\\b`);\n\nexport default function parse (text) {\n\tconst ctrl = new ParseCtrl(text);\n\tconst parse = {\n\t\tstring () {\n\t\t\tif (ctrl.node.type === \"string\") {\n\t\t\t\tconst node = ctrl.node;\n\t\t\t\tif (ctrl.match(ctrl.node.data.quote)) {\n\t\t\t\t\tconst matchEscapes = ctrl.precedes(/(\\\\+)$/);\n\t\t\t\t\tif (\n\t\t\t\t\t\t!matchEscapes ||\n\t\t\t\t\t\t(matchEscapes && matchEscapes[1].length % 2 === 0)\n\t\t\t\t\t) {\n\t\t\t\t\t\tctrl.go().end();\n\t\t\t\t\t\tnode.data.val = node.text;\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tconst matchQuote = ctrl.match(/^([\"'`])/);\n\t\t\t\tif (matchQuote) {\n\t\t\t\t\tctrl.start(\"string\", {data: {quote: matchQuote[1]}});\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tcomment () {\n\t\t\tconst match = ctrl.match(/^(\\/\\/.*?)(?:$|\\Z)/m) || ctrl.match(/^(\\/\\*[\\s\\S]*?\\*\\/)/);\n\t\t\tif (match) {\n\t\t\t\tconsole.log(\"comment\", match[1]);\n\t\t\t\tctrl.go(match[1].length).add(\"comment\");\n\t\t\t\treturn true;\n\t\t\t}\n\t\t},\n\t\tkeyword () {\n\t\t\tconst match = ctrl.match(keywordsRegex);\n\t\t\tif (match) {\n\t\t\t\tctrl\n\t\t\t\t\t.go(match[1].length)\n\t\t\t\t\t.add(\"keyword\", {data: {val: match[1]}});\n\t\t\t}\n\t\t},\n\t\tbrackets () {\n\t\t\tif (ctrl.node.type === \"brackets\" && ctrl.match(ctrl.node.data.close)) {\n\t\t\t\tctrl.go().end();\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tconst match = ctrl.match(/^([\\(\\[\\{])/);\n\t\t\tif (match) {\n\t\t\t\tctrl.start(\"brackets\", {data: {open: match[1], close: {\"{\": \"}\", \"(\": \")\", \"[\": \"]\"}[match[1]]}});\n\t\t\t\treturn true;\n\t\t\t}\n\t\t},\n\t\tdot () {\n\t\t\tconst match = ctrl.match(/^(\\.+)/);\n\t\t\tif (match && match[1].length === 1) {\n\t\t\t\tctrl.go().add(\".\", {data: {val: \".\"}});\n\t\t\t\treturn true;\n\t\t\t}\n\t\t},\n\t\tcomma () {\n\t\t\tif (ctrl.match(\",\")) {\n\t\t\t\tctrl.go().add(\",\", {data: {val: \",\"}});\n\t\t\t\treturn true;\n\t\t\t}\n\t\t},\n\t\tcolon () {\n\t\t\tif (ctrl.match(\":\")) {\n\t\t\t\tctrl.go().add(\":\", {data: {val: \":\"}});\n\t\t\t\treturn true;\n\t\t\t}\n\t\t},\n\t\tsemicolon () {\n\t\t\tif (ctrl.match(\";\")) {\n\t\t\t\tctrl.go().add(\";\");\n\t\t\t\treturn true;\n\t\t\t}\n\t\t},\n\t\tnumber () {\n\t\t\tconst match = ctrl.match(/^(\\d+?\\.?\\d*)/);\n\t\t\tif (match) {\n\t\t\t\tctrl.go(match[1].length).add(\"number\", {data: {val: match[1]}});\n\t\t\t\treturn true;\n\t\t\t}\n\t\t},\n\t\tliteral () {\n\t\t\t// a  // когда в левой части выражения и без цепочек\n\t\t\tconst match = ctrl.match(/^([a-z][a-z0-9]*)/i);\n\t\t\tif (match) {\n\t\t\t\tctrl\n\t\t\t\t\t.go(match[1].length)\n\t\t\t\t\t.add(\"literal\", {data: {val: match[1]}});\n\t\t\t\treturn true;\n\t\t\t}\n\t\t},\n\t\toperation () {\n\t\t\tconst match = ctrl.match(/^([^\\s,;\\])}a-z]+)/i);\n\t\t\tif (match) {\n\t\t\t\tctrl\n\t\t\t\t\t.go(match[1].length)\n\t\t\t\t\t.add(\"operation\", {data: {val: match[1]}});\n\t\t\t\treturn true;\n\t\t\t}\n\t\t},\n\t\tlinebreak () {\n\t\t\tif (ctrl.match(/^\\n/)) {\n\t\t\t\tctrl.go().add(\"linebreak\");\n\t\t\t\treturn true;\n\t\t\t}\n\t\t},\n\t};\n\n\twhile (!ctrl.isEnd()) {\n\t\tswitch (ctrl.node.type) {\n\t\t\tcase \"string\": {\n\t\t\t\tparse.string();\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase \"comment\": {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdefault: {\n\t\t\t\t[\n\t\t\t\t\tparse.comment,\n\t\t\t\t\tparse.string,\n\t\t\t\t\tparse.linebreak,\n\t\t\t\t\tparse.semicolon,\n\t\t\t\t\tparse.number,\n\t\t\t\t\tparse.keyword,\n\t\t\t\t\tparse.brackets,\n\t\t\t\t\tparse.colon,\n\t\t\t\t\tparse.comma,\n\t\t\t\t\tparse.dot,\n\t\t\t\t\tparse.literal,\n\t\t\t\t\tparse.operation,\n\t\t\t\t].some(p => p());\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tctrl.next();\n\t}\n\treturn ctrl;\n}\n","import parseExpression from \"./parse-expression\";\nimport parseTpl from \"./parse-tpl\";\nimport formatExpression from \"./format-expression\";\n\nexport default {\n\tparseExpression,\n\tparseTpl,\n\tformatExpression,\n};\n","module.exports = require(\"./index.js\").default;\n"],"sourceRoot":""}